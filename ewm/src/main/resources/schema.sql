DROP TABLE IF EXISTS event_compilation CASCADE;
DROP TABLE IF EXISTS events CASCADE;
DROP TABLE IF EXISTS app_users CASCADE;
DROP TABLE IF EXISTS locations CASCADE;
DROP TABLE IF EXISTS categories CASCADE;
DROP TABLE IF EXISTS participation_requests CASCADE;
DROP TABLE IF EXISTS event_category CASCADE;
DROP TABLE IF EXISTS compilations CASCADE;


CREATE TABLE IF NOT EXISTS app_users (
  id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  email VARCHAR(254) NOT NULL,
  name VARCHAR(250) NOT NULL,
  CONSTRAINT UQ_USER_EMAIL UNIQUE (email)
);

CREATE TABLE IF NOT EXISTS locations (
  id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  lat DECIMAL NOT NULL,
  lon DECIMAL NOT NULL
);

CREATE TABLE IF NOT EXISTS categories (
  id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  name VARCHAR(50) NOT NULL,
  CONSTRAINT UQ_CATEGORY_NAME UNIQUE (name)
);

CREATE TABLE IF NOT EXISTS events (
  id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  annotation VARCHAR(2000) NOT NULL,
  title VARCHAR(120) NOT NULL,
  description VARCHAR(7000) NOT NULL,
  event_date TIMESTAMP NOT NULL,
  location_id BIGINT REFERENCES locations (id) NOT NULL,
  paid BOOLEAN NOT NULL,
  participant_limit INTEGER,
  request_moderation BOOLEAN NOT NULL,
  created TIMESTAMP NOT NULL,
  published TIMESTAMP,
  state VARCHAR(10) NOT NULL,
  category_id BIGINT REFERENCES categories (id) NOT NULL,
  initiator_id BIGINT REFERENCES app_users (id) ON DELETE CASCADE NOT NULL
);

CREATE TABLE IF NOT EXISTS participation_requests (
  id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  created TIMESTAMP NOT NULL,
  event_id BIGINT REFERENCES events (id) ON DELETE CASCADE NOT NULL,
  requester_id BIGINT REFERENCES app_users (id) ON DELETE CASCADE NOT NULL,
  state VARCHAR(10) NOT NULL,
  CONSTRAINT UQ_REQUEST_REQUESTER_EVENT UNIQUE (event_id, requester_id)
);

CREATE TABLE IF NOT EXISTS compilations (
  id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  title  VARCHAR(50) NOT NULL,
  pinned BOOLEAN NOT NULL
);

CREATE TABLE IF NOT EXISTS event_compilation (
  event_id BIGINT REFERENCES events (id) ON DELETE CASCADE NOT NULL,
  compilation_id BIGINT REFERENCES compilations (id) ON DELETE CASCADE NOT NULL,
  PRIMARY KEY (event_id, compilation_id)
);